{"version":3,"file":"index.esm.js","sources":["../src/build-country.js","../src/build-timezone.js","../src/index.js"],"sourcesContent":["let timezonesMap;\n\nfunction buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data);\n  const timezones = tzMap[id] || [];\n\n  return {\n    id,\n    name,\n    timezones\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n};\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const {c, a} = tz;\n    const aliasTz = data.timezones[a] || {};\n    const country = c || aliasTz.c;\n\n    if (!country) return result;\n\n    if (!result[country]) result[country] = [];\n    result[country].push(id);\n\n    return result;\n  }, {});\n}\n\nmodule.exports = buildCountry;\n","function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const {a: aliasOf = null} = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name]\n  };\n\n  const country = tz.c || null;\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  return {\n    name,\n    country,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf\n  };\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n\nmodule.exports = buildTimezone;\n","const data = require('./data.json');\nconst buildCountry = require('./build-country');\nconst buildTimezone = require('./build-timezone');\nconst totalCountries = Object.keys(data.countries).length;\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedCountries = 0;\nlet memoizedTimezones = 0;\n\nfunction getAllCountries() {\n  if (totalCountries !== memoizedCountries) Object.keys(data.countries).forEach(getCountry);\n  return { ...countries };\n}\n\nfunction getAllTimezones() {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return { ...timezones };\n}\n\nfunction getCountry(id) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return countries[id] ? { ...countries[id] } : null;\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n  memoizedCountries = Object.keys(countries).length;\n}\n\nfunction getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nfunction getCountryForTimezone(tzName) {\n  const timezone = getTimezone(tzName) || {};\n  const country = timezone.country;\n  return country ? getCountry(country) : null;\n}\n\nfunction getTimezonesForCountry(countryId) {\n  const country = getCountry(countryId);\n  if (!country) return null;\n  const {timezones = []} = country;\n  return timezones.map(getTimezone);\n}\n\nmodule.exports = {\n  getAllCountries,\n  getAllTimezones,\n  getCountry,\n  getTimezone,\n  getCountryForTimezone,\n  getTimezonesForCountry\n};\n"],"names":["timezonesMap","buildCountry","data","id","name","countries","timezones","getTimezonesMap","buildTimezonesMap","Object","keys","reduce","result","tz","c","a","aliasTz","country","push","buildTimezone","timezone","aliasOf","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","getOffsetStr","dstOffsetStr","offset","hours","Math","floor","min","getNumStr","input","num","abs","totalCountries","length","totalTimezones","memoizedCountries","memoizedTimezones","getAllCountries","forEach","getCountry","getAllTimezones","getTimezone","memoizeCountry","memoizeTimezone","getCountryForTimezone","tzName","getTimezonesForCountry","countryId","map"],"mappings":"6uBAAIA,8yyBAEJ,SAASC,aAAaC,EAAMC,OACpBC,EAAOF,EAAKG,UAAUF,UACvBC,EAKE,CACLD,GAAAA,EACAC,KAAAA,EACAE,UANYC,gBAAgBL,GACNC,IAAO,IAHb,KAYpB,SAASI,gBAAgBL,UACJF,aAAdA,cAA6BQ,kBAAkBN,GAItD,SAASM,kBAAkBN,UAClBO,OAAOC,KAAKR,EAAKI,WAAWK,OAAO,SAACC,EAAQT,OAC3CU,EAAKX,EAAKI,UAAUH,GACnBW,EAAQD,EAARC,EAAGC,EAAKF,EAALE,EACJC,EAAUd,EAAKI,UAAUS,IAAM,GAC/BE,EAAUH,GAAKE,EAAQF,SAExBG,IAEAL,EAAOK,KAAUL,EAAOK,GAAW,IACxCL,EAAOK,GAASC,KAAKf,IAEdS,GACN,IAGL,mBAAiBX,aCrCjB,SAASkB,cAAcjB,EAAME,OACrBgB,EAAWlB,EAAKI,UAAUF,OAC3BgB,EAAU,OAAO,WAEMA,EAArBL,EAAGM,aAAU,OAEdR,mCADUQ,EAAUnB,EAAKI,UAAUe,GAAW,IAG/CnB,EAAKI,UAAUF,IAGda,EAAUJ,EAAGC,GAAK,KAClBQ,EAAYT,EAAGU,EACfC,EAAYC,OAAOC,UAAUb,EAAGc,GAAKd,EAAGc,EAAIL,QAE3C,CACLlB,KAAAA,EACAa,QAAAA,EACAK,UAAAA,EACAM,aAAcC,aAAaP,GAC3BE,UAAAA,EACAM,aAAcD,aAAaL,GAC3BH,QAAAA,GAIJ,SAASQ,aAAaE,OACdC,EAAQC,KAAKC,MAAMH,EAAS,IAC5BI,EAAMJ,EAAS,mBACRA,EAAS,EAAI,IAAM,YAEfK,UAAUJ,eAAUI,UAAUD,IAGjD,SAASC,UAAUC,GACXC,EAAML,KAAKM,IAAIF,mBACNC,EAAM,GAAK,IAAM,WACbA,GAGrB,oBAAiBnB,cCrCXqB,eAAiB/B,OAAOC,KAAKR,KAAKG,WAAWoC,OAC7CC,eAAiBjC,OAAOC,KAAKR,KAAKI,WAAWmC,OAC7CpC,UAAY,GACZC,UAAY,GACdqC,kBAAoB,EACpBC,kBAAoB,EAExB,SAASC,yBACHL,iBAAmBG,mBAAmBlC,OAAOC,KAAKR,KAAKG,WAAWyC,QAAQC,8BAClE1C,WAGd,SAAS2C,yBACHN,iBAAmBE,mBAAmBnC,OAAOC,KAAKR,KAAKI,WAAWwC,QAAQG,+BAClE3C,WAGd,SAASyC,WAAW5C,UACbE,UAAUF,IAAK+C,eAAejD,eAAaC,KAAMC,IAC/CE,UAAUF,qBAAWE,UAAUF,IAAQ,KAGhD,SAAS+C,eAAejC,GACjBA,IACLZ,UAAUY,EAAQd,IAAMc,EACxB0B,kBAAoBlC,OAAOC,KAAKL,WAAWoC,QAG7C,SAASQ,YAAY7C,UACdE,UAAUF,IAAO+C,gBAAgBhC,gBAAcjB,KAAME,IACnDE,UAAUF,qBAAaE,UAAUF,IAAU,KAGpD,SAAS+C,gBAAgB/B,GAClBA,IACLd,UAAUc,EAAShB,MAAQgB,EAC3BwB,kBAAoBnC,OAAOC,KAAKU,GAAUqB,QAG5C,SAASW,sBAAsBC,GAEvBpC,GADWgC,YAAYI,IAAW,IACfpC,eAClBA,EAAU8B,WAAW9B,GAAW,KAGzC,SAASqC,uBAAuBC,GACxBtC,EAAU8B,WAAWQ,OACtBtC,EAAS,OAAO,OACIA,EAAlBX,4BAAY,MACFkD,IAAIP,qBAGN,CACfJ,gBAAAA,gBACAG,gBAAAA,gBACAD,WAAAA,WACAE,YAAAA,YACAG,sBAAAA,sBACAE,uBAAAA"}