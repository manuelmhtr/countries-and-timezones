{"version":3,"file":"index.js","sources":["../src/build-country.js","../src/build-timezone.js","../src/index.js"],"sourcesContent":["let timezonesMap;\n\nfunction buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data);\n  const timezones = tzMap[id] || [];\n\n  return {\n    id,\n    name,\n    timezones\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n};\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const {c, a} = tz;\n    const aliasTz = data.timezones[a] || {};\n    const country = c || aliasTz.c;\n\n    if (!country) return result;\n\n    if (!result[country]) result[country] = [];\n    result[country].push(id);\n\n    return result;\n  }, {});\n}\n\nmodule.exports = buildCountry;\n","function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const {a: aliasOf = null} = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name]\n  };\n\n  const country = tz.c || null;\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  return {\n    name,\n    country,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf\n  };\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n\nmodule.exports = buildTimezone;\n","const data = require('./data.json');\nconst dataIso2ToIso3 = require('./data-map-iso2-to-iso3.json');\nconst buildCountry = require('./build-country');\nconst buildTimezone = require('./build-timezone');\nconst totalCountries = Object.keys(data.countries).length;\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedCountries = 0;\nlet memoizedTimezones = 0;\n\nfunction getAllCountries() {\n  if (totalCountries !== memoizedCountries) Object.keys(data.countries).forEach(getCountry);\n  return { ...countries };\n}\n\nfunction getAllTimezones() {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return { ...timezones };\n}\n\nfunction getCountry(id) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  const idISO3 = dataIso2ToIso3[id]\n  return countries[id] ? { idISO3, ...countries[id] } : null;\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n  memoizedCountries = Object.keys(countries).length;\n}\n\nfunction getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nfunction getCountryForTimezone(tzName) {\n  const timezone = getTimezone(tzName) || {};\n  const country = timezone.country;\n  return country ? getCountry(country) : null;\n}\n\nfunction getTimezonesForCountry(countryId) {\n  const country = getCountry(countryId);\n  if (!country) return null;\n  const { timezones = [] } = country;\n  return timezones.map(getTimezone);\n}\n\nmodule.exports = {\n  getAllCountries,\n  getAllTimezones,\n  getCountry,\n  getTimezone,\n  getCountryForTimezone,\n  getTimezonesForCountry\n};\n"],"names":["timezonesMap","data","id","name","countries","timezones","Object","keys","reduce","result","tz","c","a","aliasTz","country","push","buildTimezonesMap","getTimezonesMap","getOffsetStr","offset","hours","Math","floor","min","getNumStr","input","num","abs","timezone","aliasOf","utcOffset","u","dstOffset","Number","isInteger","d","utcOffsetStr","dstOffsetStr","totalCountries","length","totalTimezones","memoizedCountries","memoizedTimezones","getCountry","buildCountry","idISO3","dataIso2ToIso3","getTimezone","buildTimezone","getAllCountries","forEach","getAllTimezones","getCountryForTimezone","tzName","getTimezonesForCountry","countryId","map"],"mappings":"k4BAAIA,q72BAqCJ,MAnCA,SAAsBC,EAAMC,OACpBC,EAAOF,EAAKG,UAAUF,UACvBC,EAKE,CACLD,GAAAA,EACAC,KAAAA,EACAE,UAIJ,SAAyBJ,GACJD,EAAdA,GAIP,SAA2BC,UAClBK,OAAOC,KAAKN,EAAKI,WAAWG,OAAO,SAACC,EAAQP,OAC3CQ,EAAKT,EAAKI,UAAUH,GACnBS,EAAQD,EAARC,EAAGC,EAAKF,EAALE,EACJC,EAAUZ,EAAKI,UAAUO,IAAM,GAC/BE,EAAUH,GAAKE,EAAQF,SAExBG,IAEAL,EAAOK,KAAUL,EAAOK,GAAW,IACxCL,EAAOK,GAASC,KAAKb,IAEdO,GACN,IAjB+BO,CAAkBf,UAC7CD,EAZOiB,CAAgBhB,GACNC,IAAO,IAHb,MCsBpB,SAASgB,EAAaC,OACdC,EAAQC,KAAKC,MAAMH,EAAS,IAC5BI,EAAMJ,EAAS,mBACRA,EAAS,EAAI,IAAM,YAEfK,EAAUJ,eAAUI,EAAUD,IAGjD,SAASC,EAAUC,GACXC,EAAML,KAAKM,IAAIF,mBACNC,EAAM,GAAK,IAAM,WACbA,GAGrB,MAxCA,SAAuBzB,EAAME,QACrByB,EAAW3B,EAAKI,UAAUF,IACjB,OAAO,SAEZ0B,cAAkBD,EAArBhB,GAAa,OAOdE,GALAJ,SADUmB,EAAU5B,EAAKI,UAAUwB,GAAW,IAG/C5B,EAAKI,UAAUF,KAGDQ,GAAK,KAClBmB,EAAYpB,EAAGqB,EACfC,EAAYC,OAAOC,UAAUxB,EAAGyB,GAAKzB,EAAGyB,EAAIL,QAE3C,CACL3B,KAAAA,EACAW,QAAAA,EACAgB,UAAAA,EACAM,aAAclB,EAAaY,GAC3BE,UAAAA,EACAK,aAAcnB,EAAac,GAC3BH,QAAAA,IClBES,EAAiBhC,OAAOC,KAAKN,EAAKG,WAAWmC,OAC7CC,EAAiBlC,OAAOC,KAAKN,EAAKI,WAAWkC,OAC7CnC,EAAY,GACZC,EAAY,GACdoC,EAAoB,EACpBC,EAAoB,EAYxB,SAASC,EAAWzC,GACbE,EAAUF,KAKOY,EALa8B,EAAa3C,EAAMC,MAOtDE,EAAUU,EAAQZ,IAAMY,EACxB2B,EAAoBnC,OAAOC,KAAKH,GAAWmC,YAPrCM,EAASC,EAAe5C,UACvBE,EAAUF,MAAQ2C,OAAAA,GAAWzC,EAAUF,IAAQ,KASxD,SAAS6C,EAAY5C,GAKrB,IAAyByB,SAJlBvB,EAAUF,KAIQyB,EAJeoB,EAAc/C,EAAME,MAM1DE,EAAUuB,EAASzB,MAAQyB,EAC3Bc,EAAoBpC,OAAOC,KAAKqB,GAAUW,QANnClC,EAAUF,QAAaE,EAAUF,IAAU,WAsBnC,CACf8C,gBA/CF,kBACMX,IAAmBG,GAAmBnC,OAAOC,KAAKN,EAAKG,WAAW8C,QAAQP,QAClEvC,IA8CZ+C,gBA3CF,kBACMX,IAAmBE,GAAmBpC,OAAOC,KAAKN,EAAKI,WAAW6C,QAAQH,QAClE1C,IA0CZsC,WAAAA,EACAI,YAAAA,EACAK,sBAlBF,SAA+BC,UAEvBvC,GADWiC,EAAYM,IAAW,IACfvC,SACR6B,EAAW7B,GAAW,MAgBvCwC,uBAbF,SAAgCC,UACxBzC,EAAU6B,EAAWY,iBAEAzC,EAAnBT,WAAY,MACHmD,IAAIT,GAFA"}